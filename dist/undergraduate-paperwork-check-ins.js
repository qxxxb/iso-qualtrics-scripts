!function(t){var e={};function a(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=t,a.c=e,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=7)}([function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){var e=n[t.getDay()],a=t.getFullYear();return e+", "+t.getDate()+"th "+i[t.getMonth()]+", "+a};var n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],i=["January","February","March","April","May","June","July","August","September","October","November","December"]},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){for(var a=0;a<e.length;a++){var n=e[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,a,n){return a&&t(e.prototype,a),n&&t(e,n),e}}();var i=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.slotLength=e.slotLength,this.slots=[],this.occupancies=[],this.arrivalDate="On Time",this.calculateSlots(e),this.setDefaultOccupancies()}return n(t,[{key:"calculateSlots",value:function(t){this.slots=[];for(var e=0;e<t.slotRanges.length;e++)for(var a=t.slotRanges[e].time.start,n=t.slotRanges[e].time.end,i=a;i<n;){var r={time:i};if("location"in t.slotRanges[e]&&(r.location=t.slotRanges[e].location),"slotCapacity"in t.slotRanges[e])r.capacity=t.slotRanges[e].slotCapacity;else{if(!("slotCapacity"in t))throw"Missing capacity for slot";r.capacity=t.slotCapacity}this.slots.push(r),i=new Date(i.getTime()+6e4*this.slotLength)}}},{key:"setSlots",value:function(t){this.slots=t,this.setDefaultOccupancies()}},{key:"getUniqueDatesInSlots",value:function(){for(var t=[],e=0;e<this.slots.length;e++)(0==t.length||function(t,e){for(var a=0;a<t.length;a++)if(e.toDateString()==t[a].toDateString())return!1;return!0}(t,this.slots[e].time))&&t.push(new Date(this.slots[e].time.toLocaleDateString()));return t}},{key:"setDefaultOccupancies",value:function(){this.occupancies=[];for(var t=this.getUniqueDatesInSlots(),e=0;e<t.length;e++)this.occupancies.push({date:t[e],count:0})}},{key:"setOccupancy",value:function(t,e){for(var a=0;a<this.occupancies.length;a++)if(this.occupancies[a].date.toDateString()==t.toDateString())return void(this.occupancies[a].count=e);throw new RangeError("Date does not exist in time range")}},{key:"countOccupantsInDay",value:function(t){for(var e=0;e<this.occupancies.length;e++)if(this.occupancies[e].date.toDateString()==t.toDateString())return this.occupancies[e].count;throw new RangeError("Date does not exist in time range")}},{key:"setArrivalDate",value:function(t){this.arrivalDate=t}},{key:"getMaxOccupantsInDay",value:function(t){for(var e=0,a=!1,n=0;n<this.slots.length;n++)this.slots[n].time.toDateString()==t.toDateString()&&(a=!0,e+=this.slots[n].capacity);if(!a)throw new RangeError("Date does not exist in time range");return e}},{key:"isDayFull",value:function(t){for(var e=0;e<this.occupancies.length;e++)if(this.occupancies[e].date.toDateString()==t.toDateString()){try{var a=this.getMaxOccupantsInDay(t)}catch(t){throw new RangeError("Date in occupancies does not exist in time range")}return this.occupancies[e].count>=a}throw new RangeError("Date does not exist in time range")}},{key:"calculateOverflowLayers",value:function(t){return Math.floor((this.countOccupantsInDay(t)-this.getMaxOccupantsInDay(t))/this.countSlotsInDay(t))}},{key:"getOccupancyWithLeastOverflowLayersAfterArrivalDate",value:function(){for(var t=this.occupancies[0],e=this.calculateOverflowLayers(this.occupancies[0].date),a=1;a<this.occupancies.length;a++)if(!("On Time"!=this.arrivalDate&&this.occupancies[a].date<this.arrivalDate)){var n=this.calculateOverflowLayers(this.occupancies[a].date);n<e&&(e=n,t=this.occupancies[a])}return t}},{key:"countSlotsInDay",value:function(t){for(var e=0,a=0;a<this.slots.length;a++)this.slots[a].time.toDateString()==t.toDateString()&&e++;return e}},{key:"getIndexOfDayInSlots",value:function(t){for(var e=0;e<this.slots.length;e++)if(this.slots[e].time.toDateString()==t.toDateString())return e}},{key:"getFirstAvailableSlot",value:function(){for(var t=!0,e=0;e<this.occupancies.length;e++)if(!(this.occupancies[e].date<=this.arrivalDate||this.isDayFull(this.occupancies[e].date))){t=!1;var a=this.occupancies[e].date,n=null,i=0,r=this.countOccupantsInDay(this.occupancies[e].date);for(e=0;e<this.slots.length;e++)if(this.slots[e].time.toDateString()==a.toDateString()){if(null==n&&(n=e),(r-=this.slots[e].capacity)<0)break;i++}var o=i+n;break}if(t){var s=this.getOccupancyWithLeastOverflowLayersAfterArrivalDate(),c=this.countSlotsInDay(s.date);o=(i=s.count%c)+(n=this.getIndexOfDayInSlots(s.date))}var u=this.slots[o];return delete u.capacity,u}},{key:"register",value:function(){return this.getFirstAvailableSlot()}}]),t}();e.default=i},,,,,,function(t,e,a){"use strict";var n=r(a(1)),i=r(a(0));function r(t){return t&&t.__esModule?t:{default:t}}Qualtrics.SurveyEngine.addOnload(function(){var t=new n.default({slotRanges:[{time:{start:new Date("8/20/2018 2:00 PM"),end:new Date("8/20/2018 4:00 PM")}},{time:{start:new Date("8/21/2018 1:00 PM"),end:new Date("8/21/2018 5:00 PM")}}],slotLength:15,slotCapacity:10}),e=Qualtrics.SurveyEngine.getEmbeddedData("8/20 Paperwork Check-in Quota Count"),a=Qualtrics.SurveyEngine.getEmbeddedData("8/21 Paperwork Check-in Quota Count");if(t.setOccupancy(new Date("8/20/2018"),e),t.setOccupancy(new Date("8/21/2018"),a),"On Time"!=(r=Qualtrics.SurveyEngine.getEmbeddedData("Arrival Date")))var r=new Date(r);t.setArrivalDate(r);var o=t.register(),s=o.time.toLocaleTimeString("en-US",{timeZone:"America/New_York",hour:"2-digit",minute:"2-digit"}),c=(0,i.default)(o.time);Qualtrics.SurveyEngine.setEmbeddedData("Paperwork Check-in Time",s),Qualtrics.SurveyEngine.setEmbeddedData("Paperwork Check-in Date",c)})}]);